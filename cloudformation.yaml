AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for a websockets sendmessage.
Globals:
  Function:
    Timeout: 200

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: icon_cognito_auth_cognito_user_pool
      LambdaConfig:
        PreSignUp: !GetAtt PreSignupLambdaFunction.Arn
        PostConfirmation: !GetAtt PostConfirmationLambdaFunction.Arn
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: False
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - Name: name
          Required: True
          AttributeDataType: String
        - Name: company
          Mutable: True
          Required: False
          AttributeDataType: String
          StringAttributeConstraints:
            MinLength: 1
            MaxLength: 256
        - Name: usrl
          Mutable: True
          Required: False
          AttributeDataType: Number

  PreSignupLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognitoHandler/
      Handler: handler.lambda_handler
      MemorySize: 256
      Runtime: python3.7
      Timeout: 15

  PostConfirmationLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognitoHandler/
      Handler: handler.change_user_group
      MemorySize: 256
      Runtime: python3.7
      Timeout: 3
      Environment:
        Variables:
          ZERO: Operator 
          ONE: Supervisor
          TABLE_NAME: !Ref UsersTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref UsersTable
      - Statement: 
          - Effect: Allow
            Action: cognito-idp:*
            Resource: '*'

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: user_id
        AttributeType: S
      KeySchema:
      - AttributeName: user_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      SSESpecification:
        SSEEnabled: True

  PreSignupLambdaFunctionExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PreSignupLambdaFunction.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}'

  PostConfirmationLambdaFunctionExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt PostConfirmationLambdaFunction.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}'

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: sam_cognito_auth_cognito_client
      UserPoolId: !Ref CognitoUserPool

  UserPoolGroupAdmins:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Admin
      UserPoolId: !Ref CognitoUserPool

  UserPoolGroupOperator:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Operator
      UserPoolId: !Ref CognitoUserPool

  UserPoolGroupSupervisor:
    Type: 'AWS::Cognito::UserPoolGroup'
    Properties:
      GroupName: Supervisor
      UserPoolId: !Ref CognitoUserPool

Outputs:

   PreSignupLambdaFunctionArn:
    Description:  PreSignupLambdaFunction function ARN
    Value: !GetAtt  PreSignupLambdaFunction.Arn